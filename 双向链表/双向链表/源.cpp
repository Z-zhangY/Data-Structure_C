//
// 链表的结构
// 1.单向或者双向
// 2.带哨兵位的头节点，不存储有效数据
// 3.循环和非循环
// 
// 最常用的
// 无头单项不循环链表
// 带头双向循环链表
// 
// 
// 双向链表
// 
//





// 带头结点的不用穿二级指针
//不带头结点的传二级指针




//
// 顺序表和链表优缺点
// 
// 顺序表
// 缺点：头部中部插入复杂
// 连续的物理空间，空间不够需要增容，容易造成空间浪费
// 优点：支持随机访问
// CPU高速缓存命中率更高
// 
// 
// 链表
// 优点：任意位置插入删除效率高
// 按需申请释放空间
// 缺点：不支持随机访问（用下标访问）意味着一些排序、二分查找等在这种结构上不适用
// 链表存储一个值同时要存储一个链接指针
// 
//